#
# Copyright (c) 2005-2021 Imperas Software Ltd., www.imperas.com
#
# The contents of this file are provided under the Software License
# Agreement that you accepted before downloading this file.
#
# This source forms part of the Software and can be used for educational,
# training, and demonstration purposes but cannot be used for derivative
# works except in cases where the derivative works require OVP technology
# to run.
#
# For open source models released under licenses that you can use for
# derivative works, please visit www.OVPworld.org or www.imperas.com
# for the location of the open source models.
#


set vendor  safepower.ovpworld.org
set library peripheral
set name    NostrumNode
set version 1.0

imodelnewperipheral -name $name -imagefile pse.pse \
    -library $library -vendor $vendor -version $version \
    -constructor constructor \
    -destructor destructor 

iadddocumentation  \
    -name Description  \
    -text "The Nostrum Network on Chip (NoC) node peripheral for SafePower Project"

iadddocumentation  \
    -name Licensing  \
    -text "Open Source Apache 2.0"

iadddocumentation  \
    -name Limitations  \
    -text "This model implements the Nostrum NoC node processor interface. It does not model any timing in the transfer of messages between nodes."

iadddocumentation \
    -name Reference \
    -text "Generated using the VHDL file generic_interface_to_noc_static.vhd provided as part of example December release."

#
# Registers
#

set port "hostif"
set portSize 0x20000
imodeladdbusslaveport  -name ${port} -size ${portSize} -mustbeconnected

# Control/Status
set abrsize 0x100
set abr  "reg"
imodeladdaddressblock  -name ${abr}  -port ${port} -size $abrsize -offset 0 -width 32

# From VHDL file generic_interface_to_noc_static.vhd
# offset                     description
#             read                                 write
# 0x0000      status                               command
# 0x0001      --                                   clear interrupt
# 0x0002      interrupt                            --
# 0x0003      synchronize flag                     clear synchronize flag  
# 0x0004      hardware node number                 heartbeat timer value
# 0x0005-0x1f reserved
# 0x0020      channel message length for buffer in bits 4-0
# 0x0040      channel status for buffer in bits 4-0
# 0x006x      reserved

imodeladdmmregister  -addressblock ${port}/${abr} -name status    -width 32 -offset 0x00 -access r -readfunction  readStatus
imodeladdmmregister  -addressblock ${port}/${abr} -name command   -width 32 -offset 0x00 -access w  -writefunction writeCommand
imodeladdmmregister  -addressblock ${port}/${abr} -name intclr    -width 32 -offset 0x04 -access  w -writefunction writeIntClr
imodeladdmmregister  -addressblock ${port}/${abr} -name intStatus -width 32 -offset 0x08 -access r  -readfunction  readIntStatus
# optimize with memory so polling has zero overhead (remove readfunction  callback)
imodeladdlocalmemory -addressblock ${port}/${abr} -name synch               -offset 0x0c -access rw -size 4 -writefunction writeSyncFlag 
imodeladdmmregister  -addressblock ${port}/${abr} -name nodeid    -width 32 -offset 0x10 -access r -readfunction  readNodeId
imodeladdmmregister  -addressblock ${port}/${abr} -name heartbeat -width 32 -offset 0x10 -access w -writefunction writeHeartbeat

imodeladdlocalmemory -addressblock ${port}/${abr} -name msglength           -offset 0x20 -access r  -size 0x20 -readfunction readMsgLength
imodeladdlocalmemory -addressblock ${port}/${abr} -name msgstatus           -offset 0x40 -access r  -size 0x20 -readfunction readMsgStatus

# Output Message Buffer
set abdoutsize   0x1000
set abdoutoffset 0x08000
set abdout  "outbox"

imodeladdaddressblock  -name ${abdout}  -port ${port} -size $abdoutsize -offset $abdoutoffset -width 32
imodeladdlocalmemory -addressblock ${port}/${abdout} -name buf -size $abdoutsize -offset 0x0 -access rw

# input Message Buffer
set abdinsize   0x1000
set abdinoffset 0x10000
set abdin  "inbox"

imodeladdaddressblock  -name ${abdin}  -port ${port} -size $abdinsize -offset $abdinoffset -width 32
imodeladdlocalmemory -addressblock ${port}/${abdin} -name buf -size $abdinsize -offset 0x0 -access rw

imodeladdpacketnetport -name network -updatefunction networkReceiveMsg -maxbytes 0x256

# net is generated by node at the heartbeat rate, if enabled
imodeladdnetport -name syncOut -type output
imodeladdnetport -name syncIn  -type input -updatefunction syncInput

# id defines the node Id
imodeladdformal -name id -type uns32 -defaultvalue 1 -min 0 -max 16
# define the endian for the processor interface (default little)
imodeladdformal -name endian -type string -defaultvalue "little"

# there must be a configuration file defining in the channel information for the system
# format of a line is '<node> <channel information> <channel number> e.g. '2 recv_channel_p2_from_p6 0'
imodeladdformal -name configfile -type string -defaultvalue "channel_config.inf"
# the size of a message buffer parameter used in control word (variable but may become fixed on next release)
imodeladdformal -name sendChannelSize -type uns32 -defaultvalue 2 -min 1 -max 128
# the stride of a mail box in/out
imodeladdformal -name mboxSize -type uns32 -defaultvalue 256 -min 16 -max 4096

# if set this node is responsible for generation of the sync pulse
imodeladdformal -name generateSync -type bool

iadddocumentation \
    -handle id -name Description \
    -text "Defines the id for the node (must all be unique in design)"
