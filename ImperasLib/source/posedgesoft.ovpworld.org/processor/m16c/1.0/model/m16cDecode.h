/*
 * Copyright (c) 2011-2014 Posedge Software Inc., www.posedgesoft.com
 * Copyright (c) 2005-2021 Imperas Software Ltd., www.imperas.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */


// Utility routines and structures for the m16c decoder

#ifndef M16C_DECODE_H
#define M16C_DECODE_H

// basic number types
#include "hostapi/impTypes.h"
#include "m16cMorphEntries.h"

// model header files
#include "m16cTypeRefs.h"
#include "m16cStructure.h"

//
// Dispatcher callback type
//
#define M16C_DISPATCH_FN(_NAME) void _NAME( \
    m16cP m16c,     \
    Uns32 thisPC,   \
    Uns32 instr,    \
    void *userData  \
)
typedef M16C_DISPATCH_FN((*m16cDispatchFn));





//
// Instruction type enumeration
//
typedef enum m16cInstructionTypeE {
        M16C_IT_ABS_F1_B,
        M16C_IT_ABS_F1_W,
        M16C_IT_ADCF_F1_B,
        M16C_IT_ADCF_F1_W,
        M16C_IT_ADC_F1_B,
        M16C_IT_ADC_F1_W,
        M16C_IT_ADC_F2_B,
        M16C_IT_ADC_F2_W,
        M16C_IT_ADD_F1_B,
        M16C_IT_ADD_F1_W,
        M16C_IT_ADD_F2_B,
        M16C_IT_ADD_F2_W,
        M16C_IT_ADD_F3_ABS,
        M16C_IT_ADD_F3_FB,
        M16C_IT_ADD_F3_R0H,
        M16C_IT_ADD_F3_R0L,
        M16C_IT_ADD_F3_SB,
        M16C_IT_ADD_F4_B,
        M16C_IT_ADD_F4_W,
        M16C_IT_ADD_F5_ABS_R0H,
        M16C_IT_ADD_F5_ABS_R0L,
        M16C_IT_ADD_F5_FB_R0H,
        M16C_IT_ADD_F5_FB_R0L,
        M16C_IT_ADD_F5_R0H_R0L,
        M16C_IT_ADD_F5_R0L_R0H,
        M16C_IT_ADD_F5_SB_R0H,
        M16C_IT_ADD_F5_SB_R0L,
        M16C_IT_ADD_F6_B,
        M16C_IT_ADD_F6_W,
        M16C_IT_ADD_F7,
        M16C_IT_ADJNZ_F1_B,
        M16C_IT_ADJNZ_F1_W,
        M16C_IT_AND_F1_B,
        M16C_IT_AND_F1_W,
        M16C_IT_AND_F2_ABS,
        M16C_IT_AND_F2_FB,
        M16C_IT_AND_F2_R0H,
        M16C_IT_AND_F2_R0L,
        M16C_IT_AND_F2_SB,
        M16C_IT_AND_F3_B,
        M16C_IT_AND_F3_W,
        M16C_IT_AND_F4_ABS_R0H,
        M16C_IT_AND_F4_ABS_R0L,
        M16C_IT_AND_F4_FB_R0H,
        M16C_IT_AND_F4_FB_R0L,
        M16C_IT_AND_F4_R0H_R0L,
        M16C_IT_AND_F4_R0L_R0H,
        M16C_IT_AND_F4_SB_R0H,
        M16C_IT_AND_F4_SB_R0L,
        M16C_IT_BAND_F1,
        M16C_IT_BCLR_F1,
        M16C_IT_BCLR_F2_0,
        M16C_IT_BCLR_F2_1,
        M16C_IT_BCLR_F2_2,
        M16C_IT_BCLR_F2_3,
        M16C_IT_BCLR_F2_4,
        M16C_IT_BCLR_F2_5,
        M16C_IT_BCLR_F2_6,
        M16C_IT_BCLR_F2_7,
        M16C_IT_BMCND_F1,
        M16C_IT_BMCND_F2_EQ,
        M16C_IT_BMCND_F2_GE,
        M16C_IT_BMCND_F2_GEU,
        M16C_IT_BMCND_F2_GT,
        M16C_IT_BMCND_F2_GTU,
        M16C_IT_BMCND_F2_LE,
        M16C_IT_BMCND_F2_LEU,
        M16C_IT_BMCND_F2_LT,
        M16C_IT_BMCND_F2_LTU,
        M16C_IT_BMCND_F2_N,
        M16C_IT_BMCND_F2_NE,
        M16C_IT_BMCND_F2_NO,
        M16C_IT_BMCND_F2_O,
        M16C_IT_BMCND_F2_PZ,
        M16C_IT_BNAND_F1,
        M16C_IT_BNOR_F1,
        M16C_IT_BNOT_F1,
        M16C_IT_BNOT_F2_0,
        M16C_IT_BNOT_F2_1,
        M16C_IT_BNOT_F2_2,
        M16C_IT_BNOT_F2_3,
        M16C_IT_BNOT_F2_4,
        M16C_IT_BNOT_F2_5,
        M16C_IT_BNOT_F2_6,
        M16C_IT_BNOT_F2_7,
        M16C_IT_BNTST_F1,
        M16C_IT_BNXOR_F1,
        M16C_IT_BOR_F1,
        M16C_IT_BRK_F1,
        M16C_IT_BSET_F1,
        M16C_IT_BSET_F2_0,
        M16C_IT_BSET_F2_1,
        M16C_IT_BSET_F2_2,
        M16C_IT_BSET_F2_3,
        M16C_IT_BSET_F2_4,
        M16C_IT_BSET_F2_5,
        M16C_IT_BSET_F2_6,
        M16C_IT_BSET_F2_7,
        M16C_IT_BTSTC_F1,
        M16C_IT_BTSTS_F1,
        M16C_IT_BTST_F1,
        M16C_IT_BTST_F2_0,
        M16C_IT_BTST_F2_1,
        M16C_IT_BTST_F2_2,
        M16C_IT_BTST_F2_3,
        M16C_IT_BTST_F2_4,
        M16C_IT_BTST_F2_5,
        M16C_IT_BTST_F2_6,
        M16C_IT_BTST_F2_7,
        M16C_IT_BXOR_F1,
        M16C_IT_CMP_F1_B,
        M16C_IT_CMP_F1_W,
        M16C_IT_CMP_F2_B,
        M16C_IT_CMP_F2_W,
        M16C_IT_CMP_F3_ABS,
        M16C_IT_CMP_F3_FB,
        M16C_IT_CMP_F3_R0H,
        M16C_IT_CMP_F3_R0L,
        M16C_IT_CMP_F3_SB,
        M16C_IT_CMP_F4_B,
        M16C_IT_CMP_F4_W,
        M16C_IT_CMP_F5_ABS_R0H,
        M16C_IT_CMP_F5_ABS_R0L,
        M16C_IT_CMP_F5_FB_R0H,
        M16C_IT_CMP_F5_FB_R0L,
        M16C_IT_CMP_F5_R0H_R0L,
        M16C_IT_CMP_F5_R0L_R0H,
        M16C_IT_CMP_F5_SB_R0H,
        M16C_IT_CMP_F5_SB_R0L,
        M16C_IT_DADC_F1,
        M16C_IT_DADC_F2,
        M16C_IT_DADC_F3,
        M16C_IT_DADC_F4,
        M16C_IT_DADD_F1,
        M16C_IT_DADD_F2,
        M16C_IT_DADD_F3,
        M16C_IT_DADD_F4,
        M16C_IT_DEC_F1_ABS,
        M16C_IT_DEC_F1_FB,
        M16C_IT_DEC_F1_R0H,
        M16C_IT_DEC_F1_R0L,
        M16C_IT_DEC_F1_SB,
        M16C_IT_DEC_F2_A0,
        M16C_IT_DEC_F2_A1,
        M16C_IT_DIVU_F1_B,
        M16C_IT_DIVU_F1_W,
        M16C_IT_DIVU_F2_B,
        M16C_IT_DIVU_F2_W,
        M16C_IT_DIVX_F1_B,
        M16C_IT_DIVX_F1_W,
        M16C_IT_DIVX_F2_B,
        M16C_IT_DIVX_F2_W,
        M16C_IT_DIV_F1_B,
        M16C_IT_DIV_F1_W,
        M16C_IT_DIV_F2_B,
        M16C_IT_DIV_F2_W,
        M16C_IT_DSBB_F1,
        M16C_IT_DSBB_F2,
        M16C_IT_DSBB_F3,
        M16C_IT_DSBB_F4,
        M16C_IT_DSUB_F1,
        M16C_IT_DSUB_F2,
        M16C_IT_DSUB_F3,
        M16C_IT_DSUB_F4,
        M16C_IT_ENTER_F1,
        M16C_IT_EXITD_F1,
        M16C_IT_EXTS_F1,
        M16C_IT_EXTS_F2,
        M16C_IT_FCLR_F1_B,
        M16C_IT_FCLR_F1_C,
        M16C_IT_FCLR_F1_D,
        M16C_IT_FCLR_F1_I,
        M16C_IT_FCLR_F1_O,
        M16C_IT_FCLR_F1_S,
        M16C_IT_FCLR_F1_U,
        M16C_IT_FCLR_F1_Z,
        M16C_IT_FSET_F1_B,
        M16C_IT_FSET_F1_C,
        M16C_IT_FSET_F1_D,
        M16C_IT_FSET_F1_I,
        M16C_IT_FSET_F1_O,
        M16C_IT_FSET_F1_S,
        M16C_IT_FSET_F1_U,
        M16C_IT_FSET_F1_Z,
        M16C_IT_INC_F1_ABS,
        M16C_IT_INC_F1_FB,
        M16C_IT_INC_F1_R0H,
        M16C_IT_INC_F1_R0L,
        M16C_IT_INC_F1_SB,
        M16C_IT_INC_F2_A0,
        M16C_IT_INC_F2_A1,
        M16C_IT_INTO_F1,
        M16C_IT_INT_F1,
        M16C_IT_JCND_F1_EQ,
        M16C_IT_JCND_F1_GEU,
        M16C_IT_JCND_F1_GTU,
        M16C_IT_JCND_F1_LEU,
        M16C_IT_JCND_F1_LTU,
        M16C_IT_JCND_F1_N,
        M16C_IT_JCND_F1_NE,
        M16C_IT_JCND_F1_PZ,
        M16C_IT_JCND_F2_GE,
        M16C_IT_JCND_F2_GT,
        M16C_IT_JCND_F2_LE,
        M16C_IT_JCND_F2_LT,
        M16C_IT_JCND_F2_NO,
        M16C_IT_JCND_F2_O,
        M16C_IT_JMPI_F1,
        M16C_IT_JMPI_F2,
        M16C_IT_JMPS_F1,
        M16C_IT_JMP_F1_0,
        M16C_IT_JMP_F1_1,
        M16C_IT_JMP_F1_2,
        M16C_IT_JMP_F1_3,
        M16C_IT_JMP_F1_4,
        M16C_IT_JMP_F1_5,
        M16C_IT_JMP_F1_6,
        M16C_IT_JMP_F1_7,
        M16C_IT_JMP_F2,
        M16C_IT_JMP_F3,
        M16C_IT_JMP_F4,
        M16C_IT_JSRI_F1,
        M16C_IT_JSRI_F2,
        M16C_IT_JSRS_F1,
        M16C_IT_JSR_F1,
        M16C_IT_JSR_F2,
        M16C_IT_LDCTX_F1,
        M16C_IT_LDC_F1_FB,
        M16C_IT_LDC_F1_FLG,
        M16C_IT_LDC_F1_INTBH,
        M16C_IT_LDC_F1_INTBL,
        M16C_IT_LDC_F1_ISP,
        M16C_IT_LDC_F1_SB,
        M16C_IT_LDC_F1_SP,
        M16C_IT_LDC_F2_FB,
        M16C_IT_LDC_F2_FLG,
        M16C_IT_LDC_F2_INTBH,
        M16C_IT_LDC_F2_INTBL,
        M16C_IT_LDC_F2_ISP,
        M16C_IT_LDC_F2_SB,
        M16C_IT_LDC_F2_SP,
        M16C_IT_LDE_F1_B,
        M16C_IT_LDE_F1_W,
        M16C_IT_LDE_F2_B,
        M16C_IT_LDE_F2_W,
        M16C_IT_LDE_F3_B,
        M16C_IT_LDE_F3_W,
        M16C_IT_LDINTB_F1,
        M16C_IT_LDIPL_F1,
        M16C_IT_MOVA_F1_A0,
        M16C_IT_MOVA_F1_A1,
        M16C_IT_MOVA_F1_R0,
        M16C_IT_MOVA_F1_R1,
        M16C_IT_MOVA_F1_R2,
        M16C_IT_MOVA_F1_R3,
        M16C_IT_MOVDIR_F1_HH,
        M16C_IT_MOVDIR_F1_HL,
        M16C_IT_MOVDIR_F1_LH,
        M16C_IT_MOVDIR_F1_LL,
        M16C_IT_MOVDIR_F2_HH,
        M16C_IT_MOVDIR_F2_HL,
        M16C_IT_MOVDIR_F2_LH,
        M16C_IT_MOVDIR_F2_LL,
        M16C_IT_MOV_F10_B,
        M16C_IT_MOV_F10_W,
        M16C_IT_MOV_F11_B,
        M16C_IT_MOV_F11_W,
        M16C_IT_MOV_F1_B,
        M16C_IT_MOV_F1_W,
        M16C_IT_MOV_F2_B,
        M16C_IT_MOV_F2_W,
        M16C_IT_MOV_F3_ABS,
        M16C_IT_MOV_F3_FB,
        M16C_IT_MOV_F3_R0H,
        M16C_IT_MOV_F3_R0L,
        M16C_IT_MOV_F3_SB,
        M16C_IT_MOV_F4_B_A0,
        M16C_IT_MOV_F4_B_A1,
        M16C_IT_MOV_F4_W_A0,
        M16C_IT_MOV_F4_W_A1,
        M16C_IT_MOV_F5_ABS,
        M16C_IT_MOV_F5_FB,
        M16C_IT_MOV_F5_R0H,
        M16C_IT_MOV_F5_R0L,
        M16C_IT_MOV_F5_SB,
        M16C_IT_MOV_F6_B,
        M16C_IT_MOV_F6_W,
        M16C_IT_MOV_F7_ABS_A0,
        M16C_IT_MOV_F7_ABS_A1,
        M16C_IT_MOV_F7_FB_A0,
        M16C_IT_MOV_F7_FB_A1,
        M16C_IT_MOV_F7_R0H_A0,
        M16C_IT_MOV_F7_R0L_A1,
        M16C_IT_MOV_F7_SB_A0,
        M16C_IT_MOV_F7_SB_A1,
        M16C_IT_MOV_F8_R0H_ABS,
        M16C_IT_MOV_F8_R0H_FB,
        M16C_IT_MOV_F8_R0H_SB,
        M16C_IT_MOV_F8_R0L_ABS,
        M16C_IT_MOV_F8_R0L_FB,
        M16C_IT_MOV_F8_R0L_SB,
        M16C_IT_MOV_F9_ABS_R0H,
        M16C_IT_MOV_F9_ABS_R0L,
        M16C_IT_MOV_F9_FB_R0H,
        M16C_IT_MOV_F9_FB_R0L,
        M16C_IT_MOV_F9_R0H_R0L,
        M16C_IT_MOV_F9_R0L_R0H,
        M16C_IT_MOV_F9_SB_R0H,
        M16C_IT_MOV_F9_SB_R0L,
        M16C_IT_MULU_F1_B,
        M16C_IT_MULU_F1_W,
        M16C_IT_MULU_F2_B,
        M16C_IT_MULU_F2_W,
        M16C_IT_MUL_F1_B,
        M16C_IT_MUL_F1_W,
        M16C_IT_MUL_F2_B,
        M16C_IT_MUL_F2_W,
        M16C_IT_NEG_F1_B,
        M16C_IT_NEG_F1_W,
        M16C_IT_NOP_F1,
        M16C_IT_NOT_F1_B,
        M16C_IT_NOT_F1_W,
        M16C_IT_NOT_F2_ABS,
        M16C_IT_NOT_F2_FB,
        M16C_IT_NOT_F2_R0H,
        M16C_IT_NOT_F2_R0L,
        M16C_IT_NOT_F2_SB,
        M16C_IT_OR_F1_B,
        M16C_IT_OR_F1_W,
        M16C_IT_OR_F2_ABS,
        M16C_IT_OR_F2_FB,
        M16C_IT_OR_F2_R0H,
        M16C_IT_OR_F2_R0L,
        M16C_IT_OR_F2_SB,
        M16C_IT_OR_F3_B,
        M16C_IT_OR_F3_W,
        M16C_IT_OR_F4_ABS_R0H,
        M16C_IT_OR_F4_ABS_R0L,
        M16C_IT_OR_F4_FB_R0H,
        M16C_IT_OR_F4_FB_R0L,
        M16C_IT_OR_F4_R0H_R0L,
        M16C_IT_OR_F4_R0L_R0H,
        M16C_IT_OR_F4_SB_R0H,
        M16C_IT_OR_F4_SB_R0L,
        M16C_IT_POPC_F1_FB,
        M16C_IT_POPC_F1_FLG,
        M16C_IT_POPC_F1_INTBH,
        M16C_IT_POPC_F1_INTBL,
        M16C_IT_POPC_F1_ISP,
        M16C_IT_POPC_F1_SB,
        M16C_IT_POPC_F1_SP,
        M16C_IT_POPM_F1,
        M16C_IT_POP_F1_B,
        M16C_IT_POP_F1_W,
        M16C_IT_POP_F2_R0H,
        M16C_IT_POP_F2_R0L,
        M16C_IT_POP_F3_A0,
        M16C_IT_POP_F3_A1,
        M16C_IT_PUSHA_F1,
        M16C_IT_PUSHC_F1_FB,
        M16C_IT_PUSHC_F1_FLG,
        M16C_IT_PUSHC_F1_INTBH,
        M16C_IT_PUSHC_F1_INTBL,
        M16C_IT_PUSHC_F1_ISP,
        M16C_IT_PUSHC_F1_SB,
        M16C_IT_PUSHC_F1_SP,
        M16C_IT_PUSHM_F1,
        M16C_IT_PUSH_F1_B,
        M16C_IT_PUSH_F1_W,
        M16C_IT_PUSH_F2_B,
        M16C_IT_PUSH_F2_W,
        M16C_IT_PUSH_F3_R0H,
        M16C_IT_PUSH_F3_R0L,
        M16C_IT_PUSH_F4_A0,
        M16C_IT_PUSH_F4_A1,
        M16C_IT_REIT_F1,
        M16C_IT_RMPA_F1_B,
        M16C_IT_RMPA_F1_W,
        M16C_IT_ROLC_F1_B,
        M16C_IT_ROLC_F1_W,
        M16C_IT_RORC_F1_B,
        M16C_IT_RORC_F1_W,
        M16C_IT_ROT_F1_B,
        M16C_IT_ROT_F1_W,
        M16C_IT_ROT_F2_B,
        M16C_IT_ROT_F2_W,
        M16C_IT_RTS_F1,
        M16C_IT_SBB_F1_B,
        M16C_IT_SBB_F1_W,
        M16C_IT_SBB_F2_B,
        M16C_IT_SBB_F2_W,
        M16C_IT_SBJNZ_F1_B,
        M16C_IT_SBJNZ_F1_W,
        M16C_IT_SHA_F1_B,
        M16C_IT_SHA_F1_W,
        M16C_IT_SHA_F2_B,
        M16C_IT_SHA_F2_W,
        M16C_IT_SHA_F3_R2R0,
        M16C_IT_SHA_F3_R3R1,
        M16C_IT_SHA_F4_R2R0,
        M16C_IT_SHA_F4_R3R1,
        M16C_IT_SHL_F1_B,
        M16C_IT_SHL_F1_W,
        M16C_IT_SHL_F2_B,
        M16C_IT_SHL_F2_W,
        M16C_IT_SHL_F3_R2R0,
        M16C_IT_SHL_F3_R3R1,
        M16C_IT_SHL_F4_R2R0,
        M16C_IT_SHL_F4_R3R1,
        M16C_IT_SMOVB_F1_B,
        M16C_IT_SMOVB_F1_W,
        M16C_IT_SMOVF_F1_B,
        M16C_IT_SMOVF_F1_W,
        M16C_IT_SSTR_F1_B,
        M16C_IT_SSTR_F1_W,
        M16C_IT_STCTX_F1,
        M16C_IT_STC_F1_FB,
        M16C_IT_STC_F1_FLG,
        M16C_IT_STC_F1_INTBH,
        M16C_IT_STC_F1_INTBL,
        M16C_IT_STC_F1_ISP,
        M16C_IT_STC_F1_SB,
        M16C_IT_STC_F1_SP,
        M16C_IT_STC_F2,
        M16C_IT_STE_F1_B,
        M16C_IT_STE_F1_W,
        M16C_IT_STE_F2_B,
        M16C_IT_STE_F2_W,
        M16C_IT_STE_F3_B,
        M16C_IT_STE_F3_W,
        M16C_IT_STNZ_F1_ABS,
        M16C_IT_STNZ_F1_FB,
        M16C_IT_STNZ_F1_R0H,
        M16C_IT_STNZ_F1_R0L,
        M16C_IT_STNZ_F1_SB,
        M16C_IT_STZX_F1_ABS,
        M16C_IT_STZX_F1_FB,
        M16C_IT_STZX_F1_R0H,
        M16C_IT_STZX_F1_R0L,
        M16C_IT_STZX_F1_SB,
        M16C_IT_STZ_F1_ABS,
        M16C_IT_STZ_F1_FB,
        M16C_IT_STZ_F1_R0H,
        M16C_IT_STZ_F1_R0L,
        M16C_IT_STZ_F1_SB,
        M16C_IT_SUB_F1_B,
        M16C_IT_SUB_F1_W,
        M16C_IT_SUB_F2_ABS,
        M16C_IT_SUB_F2_FB,
        M16C_IT_SUB_F2_R0H,
        M16C_IT_SUB_F2_R0L,
        M16C_IT_SUB_F2_SB,
        M16C_IT_SUB_F3_B,
        M16C_IT_SUB_F3_W,
        M16C_IT_SUB_F4_ABS_R0H,
        M16C_IT_SUB_F4_ABS_R0L,
        M16C_IT_SUB_F4_FB_R0H,
        M16C_IT_SUB_F4_FB_R0L,
        M16C_IT_SUB_F4_R0H_R0L,
        M16C_IT_SUB_F4_R0L_R0H,
        M16C_IT_SUB_F4_SB_R0H,
        M16C_IT_SUB_F4_SB_R0L,
        M16C_IT_TST_F1_B,
        M16C_IT_TST_F1_W,
        M16C_IT_TST_F2_B,
        M16C_IT_TST_F2_W,
        M16C_IT_UND_F1,
        M16C_IT_WAIT_F1,
        M16C_IT_XCHG_F1_B_R0H,
        M16C_IT_XCHG_F1_B_R0L,
        M16C_IT_XCHG_F1_B_R1H,
        M16C_IT_XCHG_F1_B_R1L,
        M16C_IT_XCHG_F1_W_R0,
        M16C_IT_XCHG_F1_W_R1,
        M16C_IT_XCHG_F1_W_R2,
        M16C_IT_XCHG_F1_W_R3,
        M16C_IT_XOR_F1_B,
        M16C_IT_XOR_F1_W,
        M16C_IT_XOR_F2_B,
        M16C_IT_XOR_F2_W,
        // KEEP LAST: for sizing the array
        M16C_IT_LAST
} m16cInstructionType;


//
// Dispatch table
//
// typedef const m16cDispatchFn m16cDispatchTableC[M16C_IT_LAST];
// typedef m16cDispatchTableC *m16cDispatchTableCP;

// The m16c supports a variety of addressing modes for both the source and destination.
// See pages 24-32 of Software Manual
typedef enum addrModeSpecE {
    MODE_NA,           // no register
    MODE_REG,
    MODE_IMM,
    MODE_REGO,
    MODE_LABEL,
    MODE_ABS16,
    MODE_ABS16_ABS20,
    MODE_ABS20,
    MODE_DSP8,
    MODE_DSP16,
    MODE_DSP20,
    MODE_IMM4,
    MODE_IMM4_2,
    MODE_IMM6,
    MODE_IMM_1,
    MODE_IMM8,
    MODE_IMM8_1,
    MODE_IMM8_2,
    MODE_IMM16,
    MODE_LDINTB,
    MODE_ZERO,
    MODE_REGB,
    MODE_ADDRI,
    MODE_4BIT,  // Mode still needs to be decoded, as is a 4-bit field in the opcode
    MODE_B,
    MODE_C,
    MODE_D,
    MODE_I,
    MODE_O,
    MODE_S,
    MODE_U,
    MODE_Z,
} addrModeSpec;

/*
//
// Condition codes
//
typedef enum m16cCondE {
    FLAG_V,
    FLAG_C,
    FLAG_Z,
    FLAG_NH,
    FLAG_S,
    FLAG_T,
    FLAG_LT,
    FLAG_LE,
    FLAG_NV,
    FLAG_NC,
    FLAG_NZ,
    FLAG_H,
    FLAG_NS,
    FLAG_SA,
    FLAG_GE,
    FLAG_GT,
    FLAG_LAST             // KEEP LAST: for sizing
} m16cCond;
*/
typedef enum sizeSpecE {
    S_NA,
    B,
    W,
    A,
    L,
    BIT
} sizeSpec;

//
// Define the location of a constant in an instruction
//
typedef enum condSpecE {
    COND_NA,        // instruction has no condition
    EQ,
    GEU,
    GTU,
    LEU,
    LTU,
    N,
    NE,
    PZ,
    GE,
    GT,
    LE,
    LT,
    NO,
    O
} condSpec;


typedef enum dirSpecE {
    DIR_NA,
    LL,
    LH,
    HL,
    HH
} dirSpec;

//
// This structure is filled with information extracted from the decoded
// instruction
//
typedef struct m16cInstructionInfoS {
    const char              *opcode;      // opcode name
    Uns8                    fmt;          // opcode format
    Uns32                   thisPC;       // instruction address
    Uns32                   branchPC;     // target instruction address
    Uns32                   instruction;  // instruction word 8/16
    m16cInstructionType     type;         // instruction type
    Uns32                   cons;         // constant value
    Uns8                    bytes;        // instruction size in bytes (1, 2 or 4)
    Uns8                    rd1;          // Destination register 1
    Uns8                    rs1;          // register source 1
    Uns8                    rs2;          // register source 2
    sizeSpec                sz;           // load/store size
    condSpec                cond;         // condition code
    dirSpec                 dir;
    Int32                   imm;
    Int32                   offsetS;
    Int32                   offsetD;
    addrModeSpec            srcMode;
    addrModeSpec            destMode;
    m16cMorphType           morphindex;
    Uns32                   optype;
    vmiFlagsCP              flags;
} m16cInstructionInfo;

//
// Decode the m16c instruction at the passed address.
//
void m16cDecode(
    m16cP                m16c,
    Uns32                thisPC,
    m16cInstructionInfoP info);


#endif

